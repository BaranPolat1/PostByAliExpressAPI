<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="UrunAdi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Durum.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="HataMesaji.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="HataKodu.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="UrunAdi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Durum.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="HataMesaji.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="HataKodu.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERken2
        /+/w1edOhTvUAAAAAElFTkSuQmCC
</value>
  </data>
</root>